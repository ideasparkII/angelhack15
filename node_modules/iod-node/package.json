{
  "name": "iod-node",
  "version": "0.1.1",
  "description": "Idol OnDemand node client",
  "main": "index.js",
  "dependencies": {
    "needle": "^0.7.10"
  },
  "devDependencies": {},
  "scripts": {
    "test": "node test.js"
  },
  "author": {
    "name": "Martin Zerbib"
  },
  "license": "MIT",
  "readme": "# Node JS client library for IDOL OnDemand\n\nBasic library to help with calling IDOL OnDemand APIs [http://idolondemand.com](http://idolondemand.com)\n\n### Installation\n\n```\nnpm install git+<repourl>\n```\n\n### Start\n\n```js\nvar iod = require('iod-node')\nclient= new iod.IODClient('http://api.idolondemand.com','apikey')\n```\n\n### Callbacks\n\n```\nvar callback = function(err,resp,body){\n  console.log(body)\n}\n```\n\nWe can define our callbacks as functions and pass them as arguments\n\n```\nvar data= {'text':'I like cats'}\nclient.call('analyzesentiment',callback,data)\n```\n\nOr we can use the .on('data') hook to do the same thing.\n\n```\nclient.call('analyzesentiment',data).on('data',callback)\n```\n\nTHe order of the arguments after the api name don't matter when passed.\n\n```\nclient.call('analyzesentiment',data,callback)\n\n```\n\n\n### Async calls\n\nWhile node will mostly deal with things asynchronously, IDOL OnDemand offers a servetr side asynchronous calls method which should be used with large files and slow queries.\n\n```\nclient.call('analyzesentiment',callback,data,true)\n```\n\nPass a boolean for the async parameter.\n\n\n### Posting files\n\nFile posting is handled using the \"file\" parameter name which is used for all current file postings in IDOL OnDemand\n\n```\nvar data={'file':'test.txt'}\nclient.call('analyzesentiment',data,callback)\n```\n",
  "readmeFilename": "README.md",
  "gitHead": "586c387a956b3737a9282ad5349f1fb9d0a73a6d",
  "_id": "iod-node@0.1.1",
  "_shasum": "88796d5383ff2b849c752ac7ce774a26d3080670",
  "_from": "git+https://github.com/HP-IDOL-OnDemand/iod-node.git",
  "_resolved": "git+https://github.com/HP-IDOL-OnDemand/iod-node.git#586c387a956b3737a9282ad5349f1fb9d0a73a6d"
}
